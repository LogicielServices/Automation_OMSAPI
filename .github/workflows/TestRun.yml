# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI Pipeline for Automation OMSAPI

on:
  workflow_dispatch:
    inputs:
  #    environment:
  #      description: 'Environment (e.g., dev, QA, UAT)'
   #     type: string
    #    required: true
    #  building-block-name:
    #    description: 'Tag with @ (e.g., @smoke, @regression )'
    #    type: string
    #   required: true
      scenario:
       description: 'Select Scenario'
       type: choice
       required: true
       options:
          - "Account_Balance"
          - "StaticData"
          - "Equity_MarketData"
          - "Identity_Server_User"
          - "Identity_Server_AdminUser"
          - "OPT_MarketData"
          - "Locates_Request"
          - "Locates_Subcribe"
          - "Locates_Acquired"
          - "Locates_Summary_Subscribe"
          - "Locates_Available_Summary_Subscribe"
          - "Locates_ETBHTB"
          - "Equity_Filled_Orders"
          - "Equity_Executions"
          - "Equity_Position"
          - "Open_Orders"
          - "Equity_Active_Orders"
          - "Equity_Rejected_Orders"
          - "EquityOrders_UnSubscribe"
          - "Option_Active_Orders"
          - "Option_Filled_Orders"
          - "Option_Rejected_Orders"
          - "OptionOrders_Executions"
          - "OptionOrders_Position"
          - "OptionOrders_UnSubscribe"
          - "Flat_Positions"
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clean Workspace
        run: |
         echo "Cleaning Workspace"
          if (Test-Path git_checkout) {
            Remove-Item -Recurse -Force git_checkout
          }

      - name: Remove Existing Git_Checkout Folder
        run: |
          echo "Removing Existing Git_Checkout Folder"
          if (Test-Path git_checkout) {
            Remove-Item -Recurse -Force git_checkout
          }
          New-Item -ItemType Directory -Path git_checkout

      - name: Git Clone Repository
        run: |
          echo "Cloning Repository"
          cd git_checkout
          git clone https://github.com/LogicielServices/Automation_OMSAPI.git

      - name: Debug Input Scenario
        shell: pwsh
        run: |
          echo "Selected Scenario: ${{ github.event.inputs.scenario }}"
          
      - name: Run Test Cases
        run: |
          echo "Running Test Cases"
          cd git_checkout/Automation_OMSAPI
          mvn clean test -Dtestsuitexml="${{github.event.inputs.scenario}}.xml"
      # mvn clean test -Dtestsuitexml=${{github.event.inputs.scenario}}.xml
       # Handling post actions
    
 # post:
      - name: Always Run Step
        run: |
            echo "This will run always"
            # Add commands here, e.g., Allure commands
  
      - name: Handle Failure
        if: failure()
        run: |
            echo "This will run only if failed"
  
      - name: Handle Unstable
        if: ${{ job.status == 'unstable' }}
        run: |
            echo "This will run only if the run was marked as unstable"
  
      - name: Handle Changed State
        if: ${{ job.status != 'success' && job.status != 'failure' }}
        run: |
            echo "This will run only if the state of the Pipeline has changed"
